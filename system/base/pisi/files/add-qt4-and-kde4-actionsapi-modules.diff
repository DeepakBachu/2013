Index: pisi-2.3.2/pisi/actionsapi/qt4.py
===================================================================
--- /dev/null
+++ pisi-2.3.2/pisi/actionsapi/qt4.py
@@ -0,0 +1,66 @@
+# -*- coding: utf-8 -*-
+#
+# Copyright (C) 2010 TUBITAK/UEKAE
+#
+# This program is free software; you can redistribute it and/or modify it under
+# the terms of the GNU General Public License as published by the Free
+# Software Foundation; either version 2 of the License, or (at your option)
+# any later version.
+#
+# Please read the COPYING file.
+
+import glob
+import gettext
+__trans = gettext.translation('pisi', fallback=True)
+_ = __trans.ugettext
+
+# Pisi Modules
+import pisi.context as ctx
+
+# ActionsAPI Modules
+import pisi.actionsapi
+
+# ActionsAPI Modules
+from pisi.actionsapi import get
+from pisi.actionsapi import cmaketools
+from pisi.actionsapi import shelltools
+
+basename = "qt4"
+
+prefix = "/%s" % get.defaultprefixDIR()
+libdir = "%s/lib" % prefix
+bindir = "%s/bin" % prefix
+datadir = "%s/share/%s" % (prefix, basename)
+includedir = "%s/include" % prefix
+docdir = "/%s/%s" % (get.docDIR(), basename)
+examplesdir = "%s/%s/examples" % (libdir, basename)
+demosdir = "%s/%s/demos" % (libdir, basename)
+importdir = "%s/%s/imports" % (libdir, basename)
+plugindir = "%s/%s/plugins" % (libdir, basename)
+translationdir = "%s/translations" % datadir
+sysconfdir= "/etc"
+qmake = "%s/qmake" % bindir
+
+class ConfigureError(pisi.actionsapi.Error):
+    def __init__(self, value=''):
+        pisi.actionsapi.Error.__init__(self, value)
+        self.value = value
+        ctx.ui.error(value)
+
+def configure(projectfile='', parameters='', installPrefix=prefix):
+    if projectfile != '' and not shelltools.can_access_file(projectfile):
+        raise ConfigureError(_("Project file '%s' not found." % projectfile))
+
+    profiles = glob.glob("*.pro")
+    if len(profiles) > 1 and projectfile == '':
+        raise ConfigureError(_("It seems there are more than one .pro file, you must specify one. (Possible .pro files: %s)" % ", ".join(profiles)))
+
+    shelltools.system("%s -makefile %s PREFIX='%s' %s" % (qmake, projectfile, installPrefix, parameters))
+
+def make(parameters=''):
+    #qmake ignores CXXFLAGS and CFLAGS environment variables #11638
+    cmaketools.make('CFLAGS="%s" CXXFLAGS="%s" %s' % (get.CFLAGS(), get.CXXFLAGS(), parameters))
+
+def install(parameters='', argument='install'):
+    cmaketools.install('INSTALL_ROOT="%s" %s' % (get.installDIR(), parameters), argument)
+
Index: pisi-2.3.2/pisi/actionsapi/kde4.py
===================================================================
--- /dev/null
+++ pisi-2.3.2/pisi/actionsapi/kde4.py
@@ -0,0 +1,60 @@
+# -*- coding: utf-8 -*-
+#
+# Copyright (C) 2010 TUBITAK/UEKAE
+#
+# This program is free software; you can redistribute it and/or modify it under
+# the terms of the GNU General Public License as published by the Free
+# Software Foundation; either version 2 of the License, or (at your option)
+# any later version.
+#
+# Please read the COPYING file.
+
+# ActionsAPI Modules
+from pisi.actionsapi import get
+from pisi.actionsapi import cmaketools
+from pisi.actionsapi import shelltools
+
+basename = "kde4"
+
+prefix = "/%s" % get.defaultprefixDIR()
+libdir = "%s/lib" % prefix
+bindir = "%s/bin" % prefix
+modulesdir = "%s/%s" % (libdir, basename)
+libexecdir = "%s/libexec" % modulesdir
+iconsdir = "%s/share/icons" % prefix
+applicationsdir = "%s/share/applications/%s" % (prefix, basename)
+mandir = "/%s" % get.manDIR()
+sharedir = "%s/share/%s" % (prefix, basename)
+appsdir = "%s/apps" % sharedir
+configdir = "%s/config" % sharedir
+sysconfdir= "/etc"
+servicesdir = "%s/services" % sharedir
+servicetypesdir = "%s/servicetypes" % sharedir
+includedir = "%s/include/%s" % (prefix, basename)
+docdir = "/%s/%s" % (get.docDIR(), basename)
+htmldir = "%s/html" % docdir
+wallpapersdir = "%s/share/wallpapers" % prefix
+
+def configure(parameters = '', installPrefix = prefix, sourceDir = '..'):
+    ''' parameters -DLIB_INSTALL_DIR="hede" -DSOMETHING_USEFUL=1'''
+
+    shelltools.makedirs("build")
+    shelltools.cd("build")
+
+    cmaketools.configure("-DDATA_INSTALL_DIR:PATH=%s \
+            -DINCLUDE_INSTALL_DIR:PATH=%s \
+            -DCONFIG_INSTALL_DIR:PATH=%s \
+            -DLIBEXEC_INSTALL_DIR:PATH=%s \
+            -DSYSCONF_INSTALL_DIR:PATH=%s \
+            -DHTML_INSTALL_DIR:PATH=%s \
+            -DMAN_INSTALL_DIR:PATH=%s \
+            -DCMAKE_SKIP_RPATH:BOOL=ON \
+            -DLIB_INSTALL_DIR:PATH=%s %s" % (appsdir, includedir, configdir, libexecdir, sysconfdir, htmldir, mandir, libdir, parameters), installPrefix, sourceDir)
+
+    shelltools.cd("..")
+
+def make(parameters = ''):
+    cmaketools.make('-C build %s' % parameters)
+
+def install(parameters = '', argument = 'install'):
+    cmaketools.install('-C build %s' % parameters, argument)
Index: pisi/actionsapi/qt4.py
===================================================================
--- a/pisi/actionsapi/qt4.py	(revision 31561)
+++ a/pisi/actionsapi/qt4.py	(revision 31562)
@@ -55,11 +55,10 @@
     if len(profiles) > 1 and projectfile == '':
         raise ConfigureError(_("It seems there are more than one .pro file, you must specify one. (Possible .pro files: %s)" % ", ".join(profiles)))
 
-    shelltools.system("%s -makefile %s PREFIX='%s' %s" % (qmake, projectfile, installPrefix, parameters))
+    shelltools.system("%s -makefile %s PREFIX='%s' QMAKE_CFLAGS+='%s' QMAKE_CXXFLAGS+='%s' %s" % (qmake, projectfile, installPrefix, get.CFLAGS(), get.CXXFLAGS(), parameters))
 
 def make(parameters=''):
-    #qmake ignores CXXFLAGS and CFLAGS environment variables #11638
-    cmaketools.make('CFLAGS="%s" CXXFLAGS="%s" %s' % (get.CFLAGS(), get.CXXFLAGS(), parameters))
+    cmaketools.make(parameters)
 
 def install(parameters='', argument='install'):
     cmaketools.install('INSTALL_ROOT="%s" %s' % (get.installDIR(), parameters), argument)
