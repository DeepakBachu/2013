commit 1fb88647ac27948f37992fe81598fe5acd885d98
Author: Gökçen Eraslan <gokcen@pardus.org.tr>
Date:   Sun Jan 23 15:50:07 2011 +0200

    Fix reading DNS settings to Ipv4Widget when connection has secrets.
    
    Since we can only use, QList<uint>in DNS code of ipv4dbus toMap method, it's
    impossible to read DNS addresses in ipv4dbus fromMap method using only
    QDBusArgument demarshalling. We must use QDbusArgument in toMap, or be
    able demarshall QList<uint>. I couldn't implement first one, and fix
    this bug using the second hacky solution.

diff --git a/backends/NetworkManager/settings/ipv4dbus.cpp b/backends/NetworkManager/settings/ipv4dbus.cpp
index 956e869..52b6e20 100644
--- a/backends/NetworkManager/settings/ipv4dbus.cpp
+++ b/backends/NetworkManager/settings/ipv4dbus.cpp
@@ -26,9 +26,11 @@ void Ipv4Dbus::fromMap(const QVariantMap & map)
       setting->setMethod(methodStringToEnum(map.value("method").value<QString>())); }
 
   if (map.contains("dns")) {
-      QDBusArgument dnsArg = map.value("dns").value< QDBusArgument>();
+      bool dnsFound = false;
       QList<QHostAddress> dbusDns;
 
+      QDBusArgument dnsArg = map.value("dns").value< QDBusArgument>();
+
       dnsArg.beginArray();
       while(!dnsArg.atEnd())
       {
@@ -37,10 +39,28 @@ void Ipv4Dbus::fromMap(const QVariantMap & map)
           QHostAddress tmpHost(ntohl(utmp));
           dbusDns << tmpHost;
           kDebug() << "DNS IP is " << tmpHost.toString();
+          dnsFound = true;
       }
       //NO dnsArg.endArray(); it's fatal in debug builds.
 
-      setting->setDns(dbusDns);
+      // try QList<uint> if QDBusArgument demarshalling does not work
+      // in toMap method we use QList<uint> to marshall DNS addresses, this hack makes
+      // the DNS addresses we marshall at toMap possible to parse
+      if (!dnsFound)
+      {
+          QList <uint> dnsArg = map.value("dns").value< QList<uint> >();
+
+          foreach (uint utmp, dnsArg)
+          {
+              QHostAddress tmpHost(ntohl(utmp));
+              dbusDns << tmpHost;
+              kDebug() << "DNS IP is " << tmpHost.toString();
+              dnsFound = true;
+          }
+      }
+
+      if (dnsFound)
+          setting->setDns(dbusDns);
   }
 
   if (map.contains(QLatin1String(NM_SETTING_IP4_CONFIG_DNS_SEARCH)) &&
@@ -134,6 +154,7 @@ QVariantMap Ipv4Dbus::toMap()
   }
 
   if (!setting->dns().isEmpty()) {
+      //FIXME: Use QDBusArgument instead of QList<uint> to remove hack in fromMap DNS code
       QList<uint> dbusDns;
       foreach (const QHostAddress &dns, setting->dns()) {
           dbusDns << htonl(dns.toIPv4Address());
